<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.weltraumschaf.organization</groupId>
        <artifactId>organization-parent</artifactId>
        <version>3.0.0-SNAPSHOT</version>
    </parent>

    <groupId>de.weltraumschaf.experiments</groupId>
    <artifactId>slartibartfass</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Slartibartfass</name>
    <description>An experimental Scheme like Lisp interpreter written in Java.</description>
    <url>http://weltraumschaf.github.io/slartibartfass/</url>

    <developers>
        <developer>
            <id>Weltraumschaf</id>
            <name>Sven Strittmatter</name>
            <email>ich@weltraumschaf.de</email>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>THE BEER-WARE LICENSE</name>
            <url>http://www.weltraumschaf.de/the-beer-ware-license.txt</url>
            <distribution>repo</distribution>
            <comments>
                LICENSE

                "THE BEER-WARE LICENSE" (Revision 42):
                "Sven Strittmatter" &lt;weltraumschaf(at)googlemail(dot)com&gt; wrote this file.
                As long as you retain this notice you can do whatever you want with
                this stuff. If we meet some day, and you think this stuff is worth it,
                you can buy me a beer in return.
            </comments>
        </license>
    </licenses>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/Weltraumschaf/slartibartfass/issues</url>
    </issueManagement>

    <scm>
        <connection>scm:git:git@github.com:Weltraumschaf/slartibartfass.git</connection>
        <url>https://github.com/Weltraumschaf/slartibartfass</url>
        <developerConnection>scm:git:git@github.com:Weltraumschaf/slartibartfass.git</developerConnection>
    </scm>

    <distributionManagement>
        <site>
            <id>github-project-site</id>
            <url>gitsite:git@github.com/Weltraumschaf/slartibartfass.git</url>
        </site>
    </distributionManagement>

    <ciManagement>
        <system>jenkins</system>
        <url>http://ci.weltraumschaf.de/job/Slartibartfass/</url>
    </ciManagement>

    <properties>
        <project.build.version.source>1.8</project.build.version.source>
        <project.build.version.target>1.8</project.build.version.target>

        <project.build.mainClass>de.weltraumschaf.slartibartfass.Application</project.build.mainClass>
        <project.bin.directory>${project.basedir}/bin</project.bin.directory>
        <project.scripts.directory>${project.basedir}/src/main/scripts</project.scripts.directory>

        <generated.source.dir>src/generated/java</generated.source.dir>

        <antlr.outputdir>de/weltraumschaf/slartibartfass/frontend</antlr.outputdir>
        <antlr.version>4.5.3</antlr.version>
        <commons.version>2.2.0</commons.version>
        <jline.version>2.14.2</jline.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>${antlr.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>application</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>jcommander</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>validate</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <dependency>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
            <version>${jline.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>

                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.bin.directory}</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>${generated.source.dir}</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>${antlr.version}</version>

                <configuration>
                    <listener>false</listener>
                    <visitor>true</visitor>
                    <indentSize>4</indentSize>
                    <lineLength>120</lineLength>
                    <outputDirectory>${generated.source.dir}/${antlr.outputdir}</outputDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>generate-grammar</id>
                        <phase>generate-sources</phase>

                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>

                        <goals>
                            <goal>add-source</goal>
                        </goals>

                        <configuration>
                            <sources>
                                <source>${generated.source.dir}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>

                <executions>
                    <execution>
                        <id>make-executable-jar</id>
                        <phase>package</phase>

                        <goals>
                            <goal>single</goal>
                        </goals>

                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>${project.build.mainClass}</mainClass>
                                </manifest>
                            </archive>

                            <descriptorRefs>
                                <descriptorRefs>jar-with-dependencies</descriptorRefs>
                            </descriptorRefs>

                            <finalName>${project.build.finalName}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>false</attach>
                        </configuration>
                    </execution>

                    <execution>
                        <id>make-final-zip-with-wrapper-scripts</id>
                        <phase>install</phase>

                        <goals>
                            <goal>single</goal>
                        </goals>

                        <configuration>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/distribution.xml</descriptor>
                            </descriptors>

                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>

                <configuration>
                    <excludes>
                        <exclude>de/weltraumschaf/slartibartfass/frontend/*.class</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>

                <executions>
                    <execution>
                        <id>copy-scritps-for-install</id>
                        <phase>install</phase>

                        <goals>
                            <goal>run</goal>
                        </goals>

                        <configuration>
                            <target>
                                <copy file="${project.build.directory}/${project.build.finalName}.jar"
                                      todir="${project.bin.directory}"/>
                                <copy file="${project.scripts.directory}/slarti.sh"
                                      tofile="${project.bin.directory}/slarti"/>
                                <chmod dir="${project.bin.directory}" perm="ugo+rx"/>
                                <chmod perm="ugo+rx">
                                    <fileset dir="${project.bin.directory}">
                                        <include name="**/*"/>
                                        <exclude name="**/*.jar"/>
                                    </fileset>
                                </chmod>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>